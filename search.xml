<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python基础</title>
      <link href="/2023/06/26/Python2/"/>
      <url>/2023/06/26/Python2/</url>
      
        <content type="html"><![CDATA[<h3 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h3><h4 id="字符串输入：使用input-函数"><a href="#字符串输入：使用input-函数" class="headerlink" title="字符串输入：使用input()函数"></a>字符串输入：使用input()函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x=input()</span><br><span class="line">y=input()</span><br><span class="line">print(x+y)</span><br><span class="line">#输入：5</span><br><span class="line">  4</span><br><span class="line"> 输出：54(&quot;+&quot;对于字符串进行拼接)</span><br><span class="line"></span><br><span class="line">name=input(&quot;请输入姓名：&quot;)#input()中添加文本对所要输入的信息进行提示</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><h4 id="列表（list"><a href="#列表（list" class="headerlink" title="列表（list)"></a>列表（list)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">print(List)</span><br><span class="line">print(len(List))#获取列表的长度</span><br><span class="line">print(List[-1])#获取列表表尾的元素</span><br><span class="line">print(List[-2])#获取列表倒数第二个元素</span><br><span class="line"></span><br><span class="line">#列表的插入</span><br><span class="line">List.append(&#x27;D&#x27;)#列表尾部插入</span><br><span class="line">List.insert(2,&#x27;F&#x27;)#列表指定位置插入</span><br><span class="line">List.pop()#列表尾部元素删除</span><br><span class="line">List.pop(2)#删除列表指定索引处的元素</span><br><span class="line">print(List)</span><br><span class="line">List.remove(&#x27;A&#x27;)#一次remove()只删除一个，若有多个，要多次使用remove()函数</span><br><span class="line">print(List)</span><br></pre></td></tr></table></figure><h4 id="元组-tuple"><a href="#元组-tuple" class="headerlink" title="元组(tuple)"></a>元组(tuple)</h4><p>tuple一旦初始化就不能修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tuple=(2,3,4)#定义元组并初始化</span><br><span class="line">print(tuple)</span><br><span class="line">tuple2=(2,)#定义单元组</span><br><span class="line">tuple3=(2)#由于出现歧义，tuple3为2这个数</span><br><span class="line">print(tuple2,tuple3)</span><br></pre></td></tr></table></figure><h4 id="for-…-in…-循环：可以用于遍历元组或列表"><a href="#for-…-in…-循环：可以用于遍历元组或列表" class="headerlink" title="for ….in….循环：可以用于遍历元组或列表"></a>for ….in….循环：可以用于遍历元组或列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">for i in List:#遍历列表</span><br><span class="line">    print(i)</span><br><span class="line">print(list(range(5)))#range(5)生成一个从0开始小于5的整数序列</span><br><span class="line"> #list()将这个整数序列转换成列表</span><br><span class="line">sum=0</span><br><span class="line">for i in range(101):#计算从0加到100的值</span><br><span class="line">    sum+=i</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><h4 id="字典-dict"><a href="#字典-dict" class="headerlink" title="字典(dict)"></a>字典(dict)</h4><p>使用键-值（key-value）存储，具有极快的查找速度</p><h5 id="字典的创建"><a href="#字典的创建" class="headerlink" title="字典的创建"></a>字典的创建</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Dict=&#123;&#x27;A&#x27;:1,&#x27;B&#x27;:2,&#x27;C&#x27;:3&#125;#创建字典</span><br><span class="line">Dict[&#x27;A&#x27;]=4#修改key对应的值</span><br><span class="line">print(&#x27;D&#x27; in Dict)#判断字典key是否存在</span><br><span class="line">Dict.pop(&#x27;A&#x27;)#按key删除 或可用：del Dict[&#x27;A&#x27;]</span><br><span class="line">print(Dict)#注：字典中的key是不可变的对象</span><br><span class="line">Dict[&#x27;D&#x27;]=4#向字典中添加键值对</span><br></pre></td></tr></table></figure><h5 id="字典的遍历"><a href="#字典的遍历" class="headerlink" title="字典的遍历"></a>字典的遍历</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for key,val in Dict.items():#以键值对的形式遍历字典</span><br><span class="line">    print(key,val)</span><br><span class="line">for key in Dict.keys():#遍历字典的键，其中.keys()可省略</span><br><span class="line">    print(key)</span><br><span class="line">for val in Dict.values():#遍历字典中的值</span><br><span class="line">    print(val)</span><br><span class="line">for key in sorted(Dict.keys()):#在遍历前对字典的键的列表排序</span><br><span class="line">    print(key)</span><br><span class="line">for val in set(Dict.values()):#在遍历前对字典的值的列表去重</span><br><span class="line">    print(val)</span><br></pre></td></tr></table></figure><h4 id="集合-set"><a href="#集合-set" class="headerlink" title="集合(set)"></a>集合(set)</h4><p>重复的元素在set中会被自动过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s=set([1,2,2,3,3])#创建一个set，使用list作为输入集合</span><br><span class="line">print(s)#输出&#123;1, 2, 3&#125;，相同的元素被过滤</span><br><span class="line">s.add(4)#向集合中添加元素</span><br><span class="line">s.remove(1)</span><br><span class="line">print(s)#输出&#123;2，3，4&#125;</span><br><span class="line">s2=set([1,2,3])</span><br><span class="line">print(s&amp;s2)#集合取交集</span><br><span class="line">print(s|s2)#集合取并集</span><br></pre></td></tr></table></figure><h4 id="字符串（str"><a href="#字符串（str" class="headerlink" title="字符串（str)"></a>字符串（str)</h4><p>str是不可变对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=&#x27;abc&#x27;</span><br><span class="line">print(a.replace(&#x27;a&#x27;,&#x27;A&#x27;))#输出Abc</span><br><span class="line">print(a)#输出abc,不可变对象本身永远是不可变的</span><br></pre></td></tr></table></figure><h4 id="函数的默认参数"><a href="#函数的默认参数" class="headerlink" title="函数的默认参数"></a>函数的默认参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def enroll(name, gender, age=6, city=&#x27;Beijing&#x27;):#把年龄和城市设为默认参数</span><br><span class="line">    print(&#x27;name:&#x27;, name)</span><br><span class="line">    print(&#x27;gender:&#x27;, gender)</span><br><span class="line">    print(&#x27;age:&#x27;, age)</span><br><span class="line">    print(&#x27;city:&#x27;, city)</span><br><span class="line"></span><br><span class="line">#只有与默认参数不符的学生才需要提供额外的信息</span><br><span class="line">enroll(&#x27;Bob&#x27;, &#x27;M&#x27;, 7)</span><br><span class="line">enroll(&#x27;Adam&#x27;, &#x27;M&#x27;, city=&#x27;Tianjin&#x27;)#不按顺序提供部分默认参数时，需要把参数名写上</span><br></pre></td></tr></table></figure><h4 id="函数的可变参数"><a href="#函数的可变参数" class="headerlink" title="函数的可变参数"></a>函数的可变参数</h4><p>可变参数就是函数传入的参数个数是可变的</p><p><u>注：可变参数通过创建一个元组将传入的参数封装到元组中，即使函数只收到一个值也是如此。</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def calc(*numbers):#计算：a*a+b*b+c*c+……</span><br><span class="line">    sum = 0</span><br><span class="line">    for n in numbers:#numbers是元组</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    return sum</span><br><span class="line"></span><br><span class="line">print(calc(1, 2))</span><br><span class="line">nums = [1, 2, 3]</span><br><span class="line">print(calc(*nums))#在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去</span><br></pre></td></tr></table></figure><h4 id="函数upper-、title-、lower"><a href="#函数upper-、title-、lower" class="headerlink" title="函数upper()、title()、lower()"></a>函数upper()、title()、lower()</h4><p>upper():全字母大写</p><p>title():首字母大写</p><p>lower():全字母小写</p><p><u>注：以上方法是非永久性改变，不会改变变量的值</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cars=[&#x27;audi&#x27;,&#x27;bmw&#x27;,&#x27;subaru&#x27;,&#x27;toyota&#x27;]</span><br><span class="line">for car in cars:</span><br><span class="line">    if car==&#x27;bmw&#x27;:</span><br><span class="line">        print(car.upper())#car为bmw时以大写输出</span><br><span class="line">    else:</span><br><span class="line">        print(car.title())</span><br></pre></td></tr></table></figure><h4 id="函数的列表参数"><a href="#函数的列表参数" class="headerlink" title="函数的列表参数"></a>函数的列表参数</h4><p>列表作为参数传给函数，函数可以对列表做出永久性修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def fun(List):</span><br><span class="line">    i=0</span><br><span class="line">    for x in List:</span><br><span class="line">        List[i]=x.lower()</span><br><span class="line">        i+=1</span><br><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">fun(List)</span><br><span class="line">print(List)#输出[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span><br></pre></td></tr></table></figure><p>传入列表的副本，原始列表不做修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def fun(List):</span><br><span class="line">    i=0</span><br><span class="line">    for x in List:</span><br><span class="line">        List[i]=x.lower()</span><br><span class="line">        i+=1</span><br><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">fun(List[:])#切片表示法创建副本</span><br><span class="line">print(List)#输出[&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span><br></pre></td></tr></table></figure><h4 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print([x * x for x in range(1, 11) if x % 2 == 0]) #筛选出仅偶数的平方</span><br><span class="line"></span><br><span class="line">print([m + n for m in &#x27;ABC&#x27; for n in &#x27;XYZ&#x27;])#使用两层循环，可以生成全排列</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">print([d for d in os.listdir(&#x27;.&#x27;)])#列出当前目录下的所有文件和目录名</span><br><span class="line"></span><br><span class="line">print([x if x % 2 == 0 else -x for x in range(1, 5)])#生成表达式的if……else……，输出[-1, 2, -3, 4]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python基础</title>
      <link href="/2023/06/26/Python/"/>
      <url>/2023/06/26/Python/</url>
      
        <content type="html"><![CDATA[<h3 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h3><h4 id="1-字符串输入：使用input-函数"><a href="#1-字符串输入：使用input-函数" class="headerlink" title="1.字符串输入：使用input()函数"></a>1.字符串输入：使用input()函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x=input()</span><br><span class="line">y=input()</span><br><span class="line">print(x+y)</span><br><span class="line">#输入：5 4</span><br><span class="line"> 输出：54(&quot;+&quot;对于字符串进行拼接)</span><br><span class="line"></span><br><span class="line">name=input(&quot;请输入姓名：&quot;)#input()中添加文本对所要输入的信息进行提示</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><h4 id="2-列表（list"><a href="#2-列表（list" class="headerlink" title="2.列表（list)"></a>2.列表（list)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">print(List)</span><br><span class="line">print(len(List))#获取列表的长度</span><br><span class="line">print(List[-1])#获取列表表尾的元素</span><br><span class="line">print(List[-2])#获取列表倒数第二个元素</span><br><span class="line"></span><br><span class="line">#列表的插入</span><br><span class="line">List.append(&#x27;D&#x27;)#列表尾部插入</span><br><span class="line">List.insert(2,&#x27;F&#x27;)#列表指定位置插入</span><br><span class="line">List.pop()#列表尾部元素删除</span><br><span class="line">List.pop(2)#删除列表指定索引处的元素</span><br><span class="line">print(List)</span><br><span class="line">List.remove(&#x27;A&#x27;)#一次remove()只删除一个，若有多个，要多次使用remove()函数</span><br><span class="line">print(List)</span><br></pre></td></tr></table></figure><h4 id="3-元组-tuple"><a href="#3-元组-tuple" class="headerlink" title="3.元组(tuple)"></a>3.元组(tuple)</h4><p>tuple一旦初始化就不能修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tuple=(2,3,4)#定义元组并初始化</span><br><span class="line">print(tuple)</span><br><span class="line">tuple2=(2,)#定义单元组</span><br><span class="line">tuple3=(2)#由于出现歧义，tuple3为2这个数</span><br><span class="line">print(tuple2,tuple3)</span><br></pre></td></tr></table></figure><h4 id="4-for-…-in…-循环：可以用于遍历元组或列表"><a href="#4-for-…-in…-循环：可以用于遍历元组或列表" class="headerlink" title="4.for ….in….循环：可以用于遍历元组或列表"></a>4.for ….in….循环：可以用于遍历元组或列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">for i in List:#遍历列表</span><br><span class="line">    print(i)</span><br><span class="line">print(list(range(5)))#range(5)生成一个从0开始小于5的整数序列</span><br><span class="line"> #list()将这个整数序列转换成列表</span><br><span class="line">sum=0</span><br><span class="line">for i in range(101):#计算从0加到100的值</span><br><span class="line">    sum+=i</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><h4 id="5-字典-dict"><a href="#5-字典-dict" class="headerlink" title="5.字典(dict)"></a>5.字典(dict)</h4><p>使用键-值（key-value）存储，具有极快的查找速度</p><h5 id="字典的创建"><a href="#字典的创建" class="headerlink" title="字典的创建"></a>字典的创建</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Dict=&#123;&#x27;A&#x27;:1,&#x27;B&#x27;:2,&#x27;C&#x27;:3&#125;#创建字典</span><br><span class="line">Dict[&#x27;A&#x27;]=4#修改key对应的值</span><br><span class="line">print(&#x27;D&#x27; in Dict)#判断字典key是否存在</span><br><span class="line">Dict.pop(&#x27;A&#x27;)#按key删除 或可用：del Dict[&#x27;A&#x27;]</span><br><span class="line">print(Dict)#注：字典中的key是不可变的对象</span><br><span class="line">Dict[&#x27;D&#x27;]=4#向字典中添加键值对</span><br></pre></td></tr></table></figure><h5 id="字典的遍历"><a href="#字典的遍历" class="headerlink" title="字典的遍历"></a>字典的遍历</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for key,val in Dict.items():#以键值对的形式遍历字典</span><br><span class="line">    print(key,val)</span><br><span class="line">for key in Dict.keys():#遍历字典的键，其中.keys()可省略</span><br><span class="line">    print(key)</span><br><span class="line">for val in Dict.values():#遍历字典中的值</span><br><span class="line">    print(val)</span><br><span class="line">for key in sorted(Dict.keys()):#在遍历前对字典的键的列表排序</span><br><span class="line">    print(key)</span><br><span class="line">for val in set(Dict.values()):#在遍历前对字典的值的列表去重</span><br><span class="line">    print(val)</span><br></pre></td></tr></table></figure><h4 id="6-集合-set"><a href="#6-集合-set" class="headerlink" title="6.集合(set)"></a>6.集合(set)</h4><p>重复的元素在set中会被自动过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s=set([1,2,2,3,3])#创建一个set，使用list作为输入集合</span><br><span class="line">print(s)#输出&#123;1, 2, 3&#125;，相同的元素被过滤</span><br><span class="line">s.add(4)#向集合中添加元素</span><br><span class="line">s.remove(1)</span><br><span class="line">print(s)#输出&#123;2，3，4&#125;</span><br><span class="line">s2=set([1,2,3])</span><br><span class="line">print(s&amp;s2)#集合取交集</span><br><span class="line">print(s|s2)#集合取并集</span><br></pre></td></tr></table></figure><h4 id="7-字符串（str"><a href="#7-字符串（str" class="headerlink" title="7.字符串（str)"></a>7.字符串（str)</h4><p>str是不可变对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=&#x27;abc&#x27;</span><br><span class="line">print(a.replace(&#x27;a&#x27;,&#x27;A&#x27;))#输出Abc</span><br><span class="line">print(a)#输出abc,不可变对象本身永远是不可变的</span><br></pre></td></tr></table></figure><h4 id="8-函数的默认参数"><a href="#8-函数的默认参数" class="headerlink" title="8.函数的默认参数"></a>8.函数的默认参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def enroll(name, gender, age=6, city=&#x27;Beijing&#x27;):#把年龄和城市设为默认参数</span><br><span class="line">    print(&#x27;name:&#x27;, name)</span><br><span class="line">    print(&#x27;gender:&#x27;, gender)</span><br><span class="line">    print(&#x27;age:&#x27;, age)</span><br><span class="line">    print(&#x27;city:&#x27;, city)</span><br><span class="line"></span><br><span class="line">#只有与默认参数不符的学生才需要提供额外的信息</span><br><span class="line">enroll(&#x27;Bob&#x27;, &#x27;M&#x27;, 7)</span><br><span class="line">enroll(&#x27;Adam&#x27;, &#x27;M&#x27;, city=&#x27;Tianjin&#x27;)#不按顺序提供部分默认参数时，需要把参数名写上</span><br></pre></td></tr></table></figure><h4 id="9-函数的可变参数"><a href="#9-函数的可变参数" class="headerlink" title="9.函数的可变参数"></a>9.函数的可变参数</h4><p>可变参数就是函数传入的参数个数是可变的</p><p><u>注：可变参数通过创建一个元组将传入的参数封装到元组中，即使函数只收到一个值也是如此。</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def calc(*numbers):#计算：a*a+b*b+c*c+……</span><br><span class="line">    sum = 0</span><br><span class="line">    for n in numbers:#numbers是元组</span><br><span class="line">        sum = sum + n * n</span><br><span class="line">    return sum</span><br><span class="line"></span><br><span class="line">print(calc(1, 2))</span><br><span class="line">nums = [1, 2, 3]</span><br><span class="line">print(calc(*nums))#在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去</span><br></pre></td></tr></table></figure><h4 id="10-函数upper-、title-、lower"><a href="#10-函数upper-、title-、lower" class="headerlink" title="10.函数upper()、title()、lower()"></a>10.函数upper()、title()、lower()</h4><p>upper():全字母大写</p><p>title():首字母大写</p><p>lower():全字母小写</p><p><u>注：以上方法是非永久性改变，不会改变变量的值</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cars=[&#x27;audi&#x27;,&#x27;bmw&#x27;,&#x27;subaru&#x27;,&#x27;toyota&#x27;]</span><br><span class="line">for car in cars:</span><br><span class="line">    if car==&#x27;bmw&#x27;:</span><br><span class="line">        print(car.upper())#car为bmw时以大写输出</span><br><span class="line">    else:</span><br><span class="line">        print(car.title())</span><br></pre></td></tr></table></figure><h4 id="11-函数的列表参数"><a href="#11-函数的列表参数" class="headerlink" title="11.函数的列表参数"></a>11.函数的列表参数</h4><p>列表作为参数传给函数，函数可以对列表做出永久性修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def fun(List):</span><br><span class="line">    i=0</span><br><span class="line">    for x in List:</span><br><span class="line">        List[i]=x.lower()</span><br><span class="line">        i+=1</span><br><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">fun(List)</span><br><span class="line">print(List)#输出[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span><br></pre></td></tr></table></figure><p>传入列表的副本，原始列表不做修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def fun(List):</span><br><span class="line">    i=0</span><br><span class="line">    for x in List:</span><br><span class="line">        List[i]=x.lower()</span><br><span class="line">        i+=1</span><br><span class="line">List=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">fun(List[:])#切片表示法创建副本</span><br><span class="line">print(List)#输出[&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span><br></pre></td></tr></table></figure><h4 id="12-列表生成式"><a href="#12-列表生成式" class="headerlink" title="12.列表生成式"></a>12.列表生成式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print([x * x for x in range(1, 11) if x % 2 == 0]) #筛选出仅偶数的平方</span><br><span class="line"></span><br><span class="line">print([m + n for m in &#x27;ABC&#x27; for n in &#x27;XYZ&#x27;])#使用两层循环，可以生成全排列</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">print([d for d in os.listdir(&#x27;.&#x27;)])#列出当前目录下的所有文件和目录名</span><br><span class="line"></span><br><span class="line">print([x if x % 2 == 0 else -x for x in range(1, 5)])#生成表达式的if……else……，输出[-1, 2, -3, 4]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
